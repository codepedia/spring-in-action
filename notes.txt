As you can see, JdbcIngredientRepository is annotated with @Repository. This
annotation is one of a handful of stereotype annotations that Spring defines, including
@Controller and @Component. By annotating JdbcIngredientRepository with
@Repository, you declare that it should be automatically discovered by Spring component
scanning and instantiated as a bean in the Spring application context.
When Spring creates the JdbcIngredientRepository bean, it injects it with Jdbc-
Template via the @Autowired annotated construction. The constructor assigns
JdbcTemplate to an instance variable that will be used in other methods to query and
insert into the database. Speaking of those other methods, let’s take a look at the
implementations of findAll() and findById().
----------------------------

#lokesh  -- from stackoverflow
https://howtodoinjava.com/spring-5-tutorial/


--------------------------------------------------------------------
# adding the word controller makes the class discoverable by springboot
 They’re all annotated with @Controller to indicate that they’re controller
classes that should be automatically discovered by Spring component scanning
and instantiated as beans in the Spring application context.
 All but HomeController are annotated with @RequestMapping at the class level
to define a baseline request pattern that the controller will handle.
 They all have one or more methods that are annotated with @GetMapping or
@PostMapping to provide
